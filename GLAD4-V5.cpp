import GLADBase;
import GLAD4;

namespace GLAD::V4_5 {
	void load_GL_RECURSIVE(GLADloadproc load) {
		glClipControl = GLAD::gladLoadFunction<PFNGLCLIPCONTROLPROC>("glClipControl", load);
		glCreateTransformFeedbacks = GLAD::gladLoadFunction<PFNGLCREATETRANSFORMFEEDBACKSPROC>("glCreateTransformFeedbacks", load);
		glTransformFeedbackBufferBase = GLAD::gladLoadFunction<PFNGLTRANSFORMFEEDBACKBUFFERBASEPROC>("glTransformFeedbackBufferBase", load);
		glTransformFeedbackBufferRange = GLAD::gladLoadFunction<PFNGLTRANSFORMFEEDBACKBUFFERRANGEPROC>("glTransformFeedbackBufferRange", load);
		glGetTransformFeedbackiv = GLAD::gladLoadFunction<PFNGLGETTRANSFORMFEEDBACKIVPROC>("glGetTransformFeedbackiv", load);
		glGetTransformFeedbacki_v = GLAD::gladLoadFunction<PFNGLGETTRANSFORMFEEDBACKI_VPROC>("glGetTransformFeedbacki_v", load);
		glGetTransformFeedbacki64_v = GLAD::gladLoadFunction<PFNGLGETTRANSFORMFEEDBACKI64_VPROC>("glGetTransformFeedbacki64_v", load);
		glCreateBuffers = GLAD::gladLoadFunction<PFNGLCREATEBUFFERSPROC>("glCreateBuffers", load);
		glNamedBufferStorage = GLAD::gladLoadFunction<PFNGLNAMEDBUFFERSTORAGEPROC>("glNamedBufferStorage", load);
		glNamedBufferData = GLAD::gladLoadFunction<PFNGLNAMEDBUFFERDATAPROC>("glNamedBufferData", load);
		glNamedBufferSubData = GLAD::gladLoadFunction<PFNGLNAMEDBUFFERSUBDATAPROC>("glNamedBufferSubData", load);
		glCopyNamedBufferSubData = GLAD::gladLoadFunction<PFNGLCOPYNAMEDBUFFERSUBDATAPROC>("glCopyNamedBufferSubData", load);
		glClearNamedBufferData = GLAD::gladLoadFunction<PFNGLCLEARNAMEDBUFFERDATAPROC>("glClearNamedBufferData", load);
		glClearNamedBufferSubData = GLAD::gladLoadFunction<PFNGLCLEARNAMEDBUFFERSUBDATAPROC>("glClearNamedBufferSubData", load);
		glMapNamedBuffer = GLAD::gladLoadFunction<PFNGLMAPNAMEDBUFFERPROC>("glMapNamedBuffer", load);
		glMapNamedBufferRange = GLAD::gladLoadFunction<PFNGLMAPNAMEDBUFFERRANGEPROC>("glMapNamedBufferRange", load);
		glUnmapNamedBuffer = GLAD::gladLoadFunction<PFNGLUNMAPNAMEDBUFFERPROC>("glUnmapNamedBuffer", load);
		glFlushMappedNamedBufferRange = GLAD::gladLoadFunction<PFNGLFLUSHMAPPEDNAMEDBUFFERRANGEPROC>("glFlushMappedNamedBufferRange", load);
		glGetNamedBufferParameteriv = GLAD::gladLoadFunction<PFNGLGETNAMEDBUFFERPARAMETERIVPROC>("glGetNamedBufferParameteriv", load);
		glGetNamedBufferParameteri64v = GLAD::gladLoadFunction<PFNGLGETNAMEDBUFFERPARAMETERI64VPROC>("glGetNamedBufferParameteri64v", load);
		glGetNamedBufferPointerv = GLAD::gladLoadFunction<PFNGLGETNAMEDBUFFERPOINTERVPROC>("glGetNamedBufferPointerv", load);
		glGetNamedBufferSubData = GLAD::gladLoadFunction<PFNGLGETNAMEDBUFFERSUBDATAPROC>("glGetNamedBufferSubData", load);
		glCreateFramebuffers = GLAD::gladLoadFunction<PFNGLCREATEFRAMEBUFFERSPROC>("glCreateFramebuffers", load);
		glNamedFramebufferRenderbuffer = GLAD::gladLoadFunction<PFNGLNAMEDFRAMEBUFFERRENDERBUFFERPROC>("glNamedFramebufferRenderbuffer", load);
		glNamedFramebufferParameteri = GLAD::gladLoadFunction<PFNGLNAMEDFRAMEBUFFERPARAMETERIPROC>("glNamedFramebufferParameteri", load);
		glNamedFramebufferTexture = GLAD::gladLoadFunction<PFNGLNAMEDFRAMEBUFFERTEXTUREPROC>("glNamedFramebufferTexture", load);
		glNamedFramebufferTextureLayer = GLAD::gladLoadFunction<PFNGLNAMEDFRAMEBUFFERTEXTURELAYERPROC>("glNamedFramebufferTextureLayer", load);
		glNamedFramebufferDrawBuffer = GLAD::gladLoadFunction<PFNGLNAMEDFRAMEBUFFERDRAWBUFFERPROC>("glNamedFramebufferDrawBuffer", load);
		glNamedFramebufferDrawBuffers = GLAD::gladLoadFunction<PFNGLNAMEDFRAMEBUFFERDRAWBUFFERSPROC>("glNamedFramebufferDrawBuffers", load);
		glNamedFramebufferReadBuffer = GLAD::gladLoadFunction<PFNGLNAMEDFRAMEBUFFERREADBUFFERPROC>("glNamedFramebufferReadBuffer", load);
		glInvalidateNamedFramebufferData = GLAD::gladLoadFunction<PFNGLINVALIDATENAMEDFRAMEBUFFERDATAPROC>("glInvalidateNamedFramebufferData", load);
		glInvalidateNamedFramebufferSubData = GLAD::gladLoadFunction<PFNGLINVALIDATENAMEDFRAMEBUFFERSUBDATAPROC>("glInvalidateNamedFramebufferSubData", load);
		glClearNamedFramebufferiv = GLAD::gladLoadFunction<PFNGLCLEARNAMEDFRAMEBUFFERIVPROC>("glClearNamedFramebufferiv", load);
		glClearNamedFramebufferuiv = GLAD::gladLoadFunction<PFNGLCLEARNAMEDFRAMEBUFFERUIVPROC>("glClearNamedFramebufferuiv", load);
		glClearNamedFramebufferfv = GLAD::gladLoadFunction<PFNGLCLEARNAMEDFRAMEBUFFERFVPROC>("glClearNamedFramebufferfv", load);
		glClearNamedFramebufferfi = GLAD::gladLoadFunction<PFNGLCLEARNAMEDFRAMEBUFFERFIPROC>("glClearNamedFramebufferfi", load);
		glBlitNamedFramebuffer = GLAD::gladLoadFunction<PFNGLBLITNAMEDFRAMEBUFFERPROC>("glBlitNamedFramebuffer", load);
		glCheckNamedFramebufferStatus = GLAD::gladLoadFunction<PFNGLCHECKNAMEDFRAMEBUFFERSTATUSPROC>("glCheckNamedFramebufferStatus", load);
		glGetNamedFramebufferParameteriv = GLAD::gladLoadFunction<PFNGLGETNAMEDFRAMEBUFFERPARAMETERIVPROC>("glGetNamedFramebufferParameteriv", load);
		glGetNamedFramebufferAttachmentParameteriv = GLAD::gladLoadFunction<PFNGLGETNAMEDFRAMEBUFFERATTACHMENTPARAMETERIVPROC>("glGetNamedFramebufferAttachmentParameteriv", load);
		glCreateRenderbuffers = GLAD::gladLoadFunction<PFNGLCREATERENDERBUFFERSPROC>("glCreateRenderbuffers", load);
		glNamedRenderbufferStorage = GLAD::gladLoadFunction<PFNGLNAMEDRENDERBUFFERSTORAGEPROC>("glNamedRenderbufferStorage", load);
		glNamedRenderbufferStorageMultisample = GLAD::gladLoadFunction<PFNGLNAMEDRENDERBUFFERSTORAGEMULTISAMPLEPROC>("glNamedRenderbufferStorageMultisample", load);
		glGetNamedRenderbufferParameteriv = GLAD::gladLoadFunction<PFNGLGETNAMEDRENDERBUFFERPARAMETERIVPROC>("glGetNamedRenderbufferParameteriv", load);
		glCreateTextures = GLAD::gladLoadFunction<PFNGLCREATETEXTURESPROC>("glCreateTextures", load);
		glTextureBuffer = GLAD::gladLoadFunction<PFNGLTEXTUREBUFFERPROC>("glTextureBuffer", load);
		glTextureBufferRange = GLAD::gladLoadFunction<PFNGLTEXTUREBUFFERRANGEPROC>("glTextureBufferRange", load);
		glTextureStorage1D = GLAD::gladLoadFunction<PFNGLTEXTURESTORAGE1DPROC>("glTextureStorage1D", load);
		glTextureStorage2D = GLAD::gladLoadFunction<PFNGLTEXTURESTORAGE2DPROC>("glTextureStorage2D", load);
		glTextureStorage3D = GLAD::gladLoadFunction<PFNGLTEXTURESTORAGE3DPROC>("glTextureStorage3D", load);
		glTextureStorage2DMultisample = GLAD::gladLoadFunction<PFNGLTEXTURESTORAGE2DMULTISAMPLEPROC>("glTextureStorage2DMultisample", load);
		glTextureStorage3DMultisample = GLAD::gladLoadFunction<PFNGLTEXTURESTORAGE3DMULTISAMPLEPROC>("glTextureStorage3DMultisample", load);
		glTextureSubImage1D = GLAD::gladLoadFunction<PFNGLTEXTURESUBIMAGE1DPROC>("glTextureSubImage1D", load);
		glTextureSubImage2D = GLAD::gladLoadFunction<PFNGLTEXTURESUBIMAGE2DPROC>("glTextureSubImage2D", load);
		glTextureSubImage3D = GLAD::gladLoadFunction<PFNGLTEXTURESUBIMAGE3DPROC>("glTextureSubImage3D", load);
		glCompressedTextureSubImage1D = GLAD::gladLoadFunction<PFNGLCOMPRESSEDTEXTURESUBIMAGE1DPROC>("glCompressedTextureSubImage1D", load);
		glCompressedTextureSubImage2D = GLAD::gladLoadFunction<PFNGLCOMPRESSEDTEXTURESUBIMAGE2DPROC>("glCompressedTextureSubImage2D", load);
		glCompressedTextureSubImage3D = GLAD::gladLoadFunction<PFNGLCOMPRESSEDTEXTURESUBIMAGE3DPROC>("glCompressedTextureSubImage3D", load);
		glCopyTextureSubImage1D = GLAD::gladLoadFunction<PFNGLCOPYTEXTURESUBIMAGE1DPROC>("glCopyTextureSubImage1D", load);
		glCopyTextureSubImage2D = GLAD::gladLoadFunction<PFNGLCOPYTEXTURESUBIMAGE2DPROC>("glCopyTextureSubImage2D", load);
		glCopyTextureSubImage3D = GLAD::gladLoadFunction<PFNGLCOPYTEXTURESUBIMAGE3DPROC>("glCopyTextureSubImage3D", load);
		glTextureParameterf = GLAD::gladLoadFunction<PFNGLTEXTUREPARAMETERFPROC>("glTextureParameterf", load);
		glTextureParameterfv = GLAD::gladLoadFunction<PFNGLTEXTUREPARAMETERFVPROC>("glTextureParameterfv", load);
		glTextureParameteri = GLAD::gladLoadFunction<PFNGLTEXTUREPARAMETERIPROC>("glTextureParameteri", load);
		glTextureParameterIiv = GLAD::gladLoadFunction<PFNGLTEXTUREPARAMETERIIVPROC>("glTextureParameterIiv", load);
		glTextureParameterIuiv = GLAD::gladLoadFunction<PFNGLTEXTUREPARAMETERIUIVPROC>("glTextureParameterIuiv", load);
		glTextureParameteriv = GLAD::gladLoadFunction<PFNGLTEXTUREPARAMETERIVPROC>("glTextureParameteriv", load);
		glGenerateTextureMipmap = GLAD::gladLoadFunction<PFNGLGENERATETEXTUREMIPMAPPROC>("glGenerateTextureMipmap", load);
		glBindTextureUnit = GLAD::gladLoadFunction<PFNGLBINDTEXTUREUNITPROC>("glBindTextureUnit", load);
		glGetTextureImage = GLAD::gladLoadFunction<PFNGLGETTEXTUREIMAGEPROC>("glGetTextureImage", load);
		glGetCompressedTextureImage = GLAD::gladLoadFunction<PFNGLGETCOMPRESSEDTEXTUREIMAGEPROC>("glGetCompressedTextureImage", load);
		glGetTextureLevelParameterfv = GLAD::gladLoadFunction<PFNGLGETTEXTURELEVELPARAMETERFVPROC>("glGetTextureLevelParameterfv", load);
		glGetTextureLevelParameteriv = GLAD::gladLoadFunction<PFNGLGETTEXTURELEVELPARAMETERIVPROC>("glGetTextureLevelParameteriv", load);
		glGetTextureParameterfv = GLAD::gladLoadFunction<PFNGLGETTEXTUREPARAMETERFVPROC>("glGetTextureParameterfv", load);
		glGetTextureParameterIiv = GLAD::gladLoadFunction<PFNGLGETTEXTUREPARAMETERIIVPROC>("glGetTextureParameterIiv", load);
		glGetTextureParameterIuiv = GLAD::gladLoadFunction<PFNGLGETTEXTUREPARAMETERIUIVPROC>("glGetTextureParameterIuiv", load);
		glGetTextureParameteriv = GLAD::gladLoadFunction<PFNGLGETTEXTUREPARAMETERIVPROC>("glGetTextureParameteriv", load);
		glCreateVertexArrays = GLAD::gladLoadFunction<PFNGLCREATEVERTEXARRAYSPROC>("glCreateVertexArrays", load);
		glDisableVertexArrayAttrib = GLAD::gladLoadFunction<PFNGLDISABLEVERTEXARRAYATTRIBPROC>("glDisableVertexArrayAttrib", load);
		glEnableVertexArrayAttrib = GLAD::gladLoadFunction<PFNGLENABLEVERTEXARRAYATTRIBPROC>("glEnableVertexArrayAttrib", load);
		glVertexArrayElementBuffer = GLAD::gladLoadFunction<PFNGLVERTEXARRAYELEMENTBUFFERPROC>("glVertexArrayElementBuffer", load);
		glVertexArrayVertexBuffer = GLAD::gladLoadFunction<PFNGLVERTEXARRAYVERTEXBUFFERPROC>("glVertexArrayVertexBuffer", load);
		glVertexArrayVertexBuffers = GLAD::gladLoadFunction<PFNGLVERTEXARRAYVERTEXBUFFERSPROC>("glVertexArrayVertexBuffers", load);
		glVertexArrayAttribBinding = GLAD::gladLoadFunction<PFNGLVERTEXARRAYATTRIBBINDINGPROC>("glVertexArrayAttribBinding", load);
		glVertexArrayAttribFormat = GLAD::gladLoadFunction<PFNGLVERTEXARRAYATTRIBFORMATPROC>("glVertexArrayAttribFormat", load);
		glVertexArrayAttribIFormat = GLAD::gladLoadFunction<PFNGLVERTEXARRAYATTRIBIFORMATPROC>("glVertexArrayAttribIFormat", load);
		glVertexArrayAttribLFormat = GLAD::gladLoadFunction<PFNGLVERTEXARRAYATTRIBLFORMATPROC>("glVertexArrayAttribLFormat", load);
		glVertexArrayBindingDivisor = GLAD::gladLoadFunction<PFNGLVERTEXARRAYBINDINGDIVISORPROC>("glVertexArrayBindingDivisor", load);
		glGetVertexArrayiv = GLAD::gladLoadFunction<PFNGLGETVERTEXARRAYIVPROC>("glGetVertexArrayiv", load);
		glGetVertexArrayIndexediv = GLAD::gladLoadFunction<PFNGLGETVERTEXARRAYINDEXEDIVPROC>("glGetVertexArrayIndexediv", load);
		glGetVertexArrayIndexed64iv = GLAD::gladLoadFunction<PFNGLGETVERTEXARRAYINDEXED64IVPROC>("glGetVertexArrayIndexed64iv", load);
		glCreateSamplers = GLAD::gladLoadFunction<PFNGLCREATESAMPLERSPROC>("glCreateSamplers", load);
		glCreateProgramPipelines = GLAD::gladLoadFunction<PFNGLCREATEPROGRAMPIPELINESPROC>("glCreateProgramPipelines", load);
		glCreateQueries = GLAD::gladLoadFunction<PFNGLCREATEQUERIESPROC>("glCreateQueries", load);
		glGetQueryBufferObjecti64v = GLAD::gladLoadFunction<PFNGLGETQUERYBUFFEROBJECTI64VPROC>("glGetQueryBufferObjecti64v", load);
		glGetQueryBufferObjectiv = GLAD::gladLoadFunction<PFNGLGETQUERYBUFFEROBJECTIVPROC>("glGetQueryBufferObjectiv", load);
		glGetQueryBufferObjectui64v = GLAD::gladLoadFunction<PFNGLGETQUERYBUFFEROBJECTUI64VPROC>("glGetQueryBufferObjectui64v", load);
		glGetQueryBufferObjectuiv = GLAD::gladLoadFunction<PFNGLGETQUERYBUFFEROBJECTUIVPROC>("glGetQueryBufferObjectuiv", load);
		glMemoryBarrierByRegion = GLAD::gladLoadFunction<PFNGLMEMORYBARRIERBYREGIONPROC>("glMemoryBarrierByRegion", load);
		glGetTextureSubImage = GLAD::gladLoadFunction<PFNGLGETTEXTURESUBIMAGEPROC>("glGetTextureSubImage", load);
		glGetCompressedTextureSubImage = GLAD::gladLoadFunction<PFNGLGETCOMPRESSEDTEXTURESUBIMAGEPROC>("glGetCompressedTextureSubImage", load);
		glGetGraphicsResetStatus = GLAD::gladLoadFunction<PFNGLGETGRAPHICSRESETSTATUSPROC>("glGetGraphicsResetStatus", load);
		glGetnCompressedTexImage = GLAD::gladLoadFunction<PFNGLGETNCOMPRESSEDTEXIMAGEPROC>("glGetnCompressedTexImage", load);
		glGetnTexImage = GLAD::gladLoadFunction<PFNGLGETNTEXIMAGEPROC>("glGetnTexImage", load);
		glGetnUniformdv = GLAD::gladLoadFunction<PFNGLGETNUNIFORMDVPROC>("glGetnUniformdv", load);
		glGetnUniformfv = GLAD::gladLoadFunction<PFNGLGETNUNIFORMFVPROC>("glGetnUniformfv", load);
		glGetnUniformiv = GLAD::gladLoadFunction<PFNGLGETNUNIFORMIVPROC>("glGetnUniformiv", load);
		glGetnUniformuiv = GLAD::gladLoadFunction<PFNGLGETNUNIFORMUIVPROC>("glGetnUniformuiv", load);
		glReadnPixels = GLAD::gladLoadFunction<PFNGLREADNPIXELSPROC>("glReadnPixels", load);
		glGetnMapdv = GLAD::gladLoadFunction<PFNGLGETNMAPDVPROC>("glGetnMapdv", load);
		glGetnMapfv = GLAD::gladLoadFunction<PFNGLGETNMAPFVPROC>("glGetnMapfv", load);
		glGetnMapiv = GLAD::gladLoadFunction<PFNGLGETNMAPIVPROC>("glGetnMapiv", load);
		glGetnPixelMapfv = GLAD::gladLoadFunction<PFNGLGETNPIXELMAPFVPROC>("glGetnPixelMapfv", load);
		glGetnPixelMapuiv = GLAD::gladLoadFunction<PFNGLGETNPIXELMAPUIVPROC>("glGetnPixelMapuiv", load);
		glGetnPixelMapusv = GLAD::gladLoadFunction<PFNGLGETNPIXELMAPUSVPROC>("glGetnPixelMapusv", load);
		glGetnPolygonStipple = GLAD::gladLoadFunction<PFNGLGETNPOLYGONSTIPPLEPROC>("glGetnPolygonStipple", load);
		glGetnColorTable = GLAD::gladLoadFunction<PFNGLGETNCOLORTABLEPROC>("glGetnColorTable", load);
		glGetnConvolutionFilter = GLAD::gladLoadFunction<PFNGLGETNCONVOLUTIONFILTERPROC>("glGetnConvolutionFilter", load);
		glGetnSeparableFilter = GLAD::gladLoadFunction<PFNGLGETNSEPARABLEFILTERPROC>("glGetnSeparableFilter", load);
		glGetnHistogram = GLAD::gladLoadFunction<PFNGLGETNHISTOGRAMPROC>("glGetnHistogram", load);
		glGetnMinmax = GLAD::gladLoadFunction<PFNGLGETNMINMAXPROC>("glGetnMinmax", load);
		glTextureBarrier = GLAD::gladLoadFunction<PFNGLTEXTUREBARRIERPROC>("glTextureBarrier", load);

		GLAD::V4_4::load_GL_RECURSIVE(load);
	}
}