export module GLAD:V1_0;

export import :BASE;

// Alias for function pointer types
export using PFNGLCULLFACEPROC = void(*)(GLenum mode);
export using PFNGLFRONTFACEPROC = void(*)(GLenum mode);
export using PFNGLHINTPROC = void(*)(GLenum target, GLenum mode);
export using PFNGLLINEWIDTHPROC = void(*)(GLfloat width);
export using PFNGLPOINTSIZEPROC = void(*)(GLfloat size);
export using PFNGLPOLYGONMODEPROC = void(*)(GLenum face, GLenum mode);
export using PFNGLSCISSORPROC = void(*)(GLint x, GLint y, GLsizei width, GLsizei height);
export using PFNGLTEXPARAMETERFPROC = void(*)(GLenum target, GLenum pname, GLfloat param);
export using PFNGLTEXPARAMETERFVPROC = void(*)(GLenum target, GLenum pname, const GLfloat* params);
export using PFNGLTEXPARAMETERIPROC = void(*)(GLenum target, GLenum pname, GLint param);
export using PFNGLTEXPARAMETERIVPROC = void(*)(GLenum target, GLenum pname, const GLint* params);
export using PFNGLTEXIMAGE1DPROC = void(*)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const void* pixels);
export using PFNGLTEXIMAGE2DPROC = void(*)(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const void* pixels);
export using PFNGLDRAWBUFFERPROC = void(*)(GLenum buf);
export using PFNGLCLEARPROC = void(*)(GLbitfield mask);
export using PFNGLCLEARCOLORPROC = void(*)(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha);
export using PFNGLCLEARSTENCILPROC = void(*)(GLint s);
export using PFNGLCLEARDEPTHPROC = void(*)(GLdouble depth);
export using PFNGLSTENCILMASKPROC = void(*)(GLuint mask);
export using PFNGLCOLORMASKPROC = void(*)(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha);
export using PFNGLDEPTHMASKPROC = void(*)(GLboolean flag);
export using PFNGLDISABLEPROC = void(*)(GLenum cap);
export using PFNGLENABLEPROC = void(*)(GLenum cap);
export using PFNGLFINISHPROC = void(*)(void);
export using PFNGLFLUSHPROC = void(*)(void);
export using PFNGLBLENDFUNCPROC = void(*)(GLenum sfactor, GLenum dfactor);
export using PFNGLLOGICOPPROC = void(*)(GLenum opcode);
export using PFNGLSTENCILFUNCPROC = void(*)(GLenum func, GLint ref, GLuint mask);
export using PFNGLSTENCILOPPROC = void(*)(GLenum fail, GLenum zfail, GLenum zpass);
export using PFNGLDEPTHFUNCPROC = void(*)(GLenum func);
export using PFNGLPIXELSTOREFPROC = void(*)(GLenum pname, GLfloat param);
export using PFNGLPIXELSTOREIPROC = void(*)(GLenum pname, GLint param);
export using PFNGLREADBUFFERPROC = void(*)(GLenum src);
export using PFNGLREADPIXELSPROC = void(*)(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, void* pixels);
export using PFNGLGETBOOLEANVPROC = void(*)(GLenum pname, GLboolean* data);
export using PFNGLGETDOUBLEVPROC = void(*)(GLenum pname, GLdouble* data);
export using PFNGLGETERRORPROC = GLenum(*)(void);
export using PFNGLGETFLOATVPROC = void(*)(GLenum pname, GLfloat* data);
export using PFNGLGETINTEGERVPROC = void(*)(GLenum pname, GLint* data);
export using PFNGLGETSTRINGPROC = const GLubyte* (*)(GLenum name);
export using PFNGLGETTEXIMAGEPROC = void(*)(GLenum target, GLint level, GLenum format, GLenum type, void* pixels);
export using PFNGLGETTEXPARAMETERFVPROC = void(*)(GLenum target, GLenum pname, GLfloat* params);
export using PFNGLGETTEXPARAMETERIVPROC = void(*)(GLenum target, GLenum pname, GLint* params);
export using PFNGLGETTEXLEVELPARAMETERFVPROC = void(*)(GLenum target, GLint level, GLenum pname, GLfloat* params);
export using PFNGLGETTEXLEVELPARAMETERIVPROC = void(*)(GLenum target, GLint level, GLenum pname, GLint* params);
export using PFNGLISENABLEDPROC = GLboolean(*)(GLenum cap);
export using PFNGLDEPTHRANGEPROC = void(*)(GLdouble n, GLdouble f);
export using PFNGLVIEWPORTPROC = void(*)(GLint x, GLint y, GLsizei width, GLsizei height);

// Declare function pointers as variables
export PFNGLCULLFACEPROC glCullFace = nullptr;
export PFNGLFRONTFACEPROC glFrontFace = nullptr;
export PFNGLHINTPROC glHint = nullptr;
export PFNGLLINEWIDTHPROC glLineWidth = nullptr;
export PFNGLPOINTSIZEPROC glPointSize = nullptr;
export PFNGLPOLYGONMODEPROC glPolygonMode = nullptr;
export PFNGLSCISSORPROC glScissor = nullptr;
export PFNGLTEXPARAMETERFPROC glTexParameterf = nullptr;
export PFNGLTEXPARAMETERFVPROC glTexParameterfv = nullptr;
export PFNGLTEXPARAMETERIPROC glTexParameteri = nullptr;
export PFNGLTEXPARAMETERIVPROC glTexParameteriv = nullptr;
export PFNGLTEXIMAGE1DPROC glTexImage1D = nullptr;
export PFNGLTEXIMAGE2DPROC glTexImage2D = nullptr;
export PFNGLDRAWBUFFERPROC glDrawBuffer = nullptr;
export PFNGLCLEARPROC glClear = nullptr;
export PFNGLCLEARCOLORPROC glClearColor = nullptr;
export PFNGLCLEARSTENCILPROC glClearStencil = nullptr;
export PFNGLCLEARDEPTHPROC glClearDepth = nullptr;
export PFNGLSTENCILMASKPROC glStencilMask = nullptr;
export PFNGLCOLORMASKPROC glColorMask = nullptr;
export PFNGLDEPTHMASKPROC glDepthMask = nullptr;
export PFNGLDISABLEPROC glDisable = nullptr;
export PFNGLENABLEPROC glEnable = nullptr;
export PFNGLFINISHPROC glFinish = nullptr;
export PFNGLFLUSHPROC glFlush = nullptr;
export PFNGLBLENDFUNCPROC glBlendFunc = nullptr;
export PFNGLLOGICOPPROC glLogicOp = nullptr;
export PFNGLSTENCILFUNCPROC glStencilFunc = nullptr;
export PFNGLSTENCILOPPROC glStencilOp = nullptr;
export PFNGLDEPTHFUNCPROC glDepthFunc = nullptr;
export PFNGLPIXELSTOREFPROC glPixelStoref = nullptr;
export PFNGLPIXELSTOREIPROC glPixelStorei = nullptr;
export PFNGLREADBUFFERPROC glReadBuffer = nullptr;
export PFNGLREADPIXELSPROC glReadPixels = nullptr;
export PFNGLGETBOOLEANVPROC glGetBooleanv = nullptr;
export PFNGLGETDOUBLEVPROC glGetDoublev = nullptr;
export PFNGLGETERRORPROC glGetError = nullptr;
export PFNGLGETFLOATVPROC glGetFloatv = nullptr;
export PFNGLGETINTEGERVPROC glGetIntegerv = nullptr;
export PFNGLGETSTRINGPROC glGetString = nullptr;
export PFNGLGETTEXIMAGEPROC glGetTexImage = nullptr;
export PFNGLGETTEXPARAMETERFVPROC glGetTexParameterfv = nullptr;
export PFNGLGETTEXPARAMETERIVPROC glGetTexParameteriv = nullptr;
export PFNGLGETTEXLEVELPARAMETERFVPROC glGetTexLevelParameterfv = nullptr;
export PFNGLGETTEXLEVELPARAMETERIVPROC glGetTexLevelParameteriv = nullptr;
export PFNGLISENABLEDPROC glIsEnabled = nullptr;
export PFNGLDEPTHRANGEPROC glDepthRange = nullptr;
export PFNGLVIEWPORTPROC glViewport = nullptr;

export namespace GLAD_1_0 {
	void load_GL_RECURSIVE(GLADloadproc load) {
		glCullFace = gladLoadCoreFunction<PFNGLCULLFACEPROC>("glCullFace", "opengl32.dll");
		glFrontFace = gladLoadCoreFunction<PFNGLFRONTFACEPROC>("glFrontFace", "opengl32.dll");
		glHint = gladLoadCoreFunction<PFNGLHINTPROC>("glHint", "opengl32.dll");
		glLineWidth = gladLoadCoreFunction<PFNGLLINEWIDTHPROC>("glLineWidth", "opengl32.dll");
		glPointSize = gladLoadCoreFunction<PFNGLPOINTSIZEPROC>("glPointSize", "opengl32.dll");
		glPolygonMode = gladLoadCoreFunction<PFNGLPOLYGONMODEPROC>("glPolygonMode", "opengl32.dll");
		glScissor = gladLoadCoreFunction<PFNGLSCISSORPROC>("glScissor", "opengl32.dll");
		glTexParameterf = gladLoadCoreFunction<PFNGLTEXPARAMETERFPROC>("glTexParameterf", "opengl32.dll");
		glTexParameterfv = gladLoadCoreFunction<PFNGLTEXPARAMETERFVPROC>("glTexParameterfv", "opengl32.dll");
		glTexParameteri = gladLoadCoreFunction<PFNGLTEXPARAMETERIPROC>("glTexParameteri", "opengl32.dll");
		glTexParameteriv = gladLoadCoreFunction<PFNGLTEXPARAMETERIVPROC>("glTexParameteriv", "opengl32.dll");
		glTexImage1D = gladLoadCoreFunction<PFNGLTEXIMAGE1DPROC>("glTexImage1D", "opengl32.dll");
		glTexImage2D = gladLoadCoreFunction<PFNGLTEXIMAGE2DPROC>("glTexImage2D", "opengl32.dll");
		glDrawBuffer = gladLoadCoreFunction<PFNGLDRAWBUFFERPROC>("glDrawBuffer", "opengl32.dll");
		glClear = gladLoadCoreFunction<PFNGLCLEARPROC>("glClear", "opengl32.dll");
		glClearColor = gladLoadCoreFunction<PFNGLCLEARCOLORPROC>("glClearColor", "opengl32.dll");
		glClearStencil = gladLoadCoreFunction<PFNGLCLEARSTENCILPROC>("glClearStencil", "opengl32.dll");
		glClearDepth = gladLoadCoreFunction<PFNGLCLEARDEPTHPROC>("glClearDepth", "opengl32.dll");
		glStencilMask = gladLoadCoreFunction<PFNGLSTENCILMASKPROC>("glStencilMask", "opengl32.dll");
		glColorMask = gladLoadCoreFunction<PFNGLCOLORMASKPROC>("glColorMask", "opengl32.dll");
		glDepthMask = gladLoadCoreFunction<PFNGLDEPTHMASKPROC>("glDepthMask", "opengl32.dll");
		glDisable = gladLoadCoreFunction<PFNGLDISABLEPROC>("glDisable", "opengl32.dll");
		glEnable = gladLoadCoreFunction<PFNGLENABLEPROC>("glEnable", "opengl32.dll");
		glFinish = gladLoadCoreFunction<PFNGLFINISHPROC>("glFinish", "opengl32.dll");
		glFlush = gladLoadCoreFunction<PFNGLFLUSHPROC>("glFlush", "opengl32.dll");
		glBlendFunc = gladLoadCoreFunction<PFNGLBLENDFUNCPROC>("glBlendFunc", "opengl32.dll");
		glLogicOp = gladLoadCoreFunction<PFNGLLOGICOPPROC>("glLogicOp", "opengl32.dll");
		glStencilFunc = gladLoadCoreFunction<PFNGLSTENCILFUNCPROC>("glStencilFunc", "opengl32.dll");
		glStencilOp = gladLoadCoreFunction<PFNGLSTENCILOPPROC>("glStencilOp", "opengl32.dll");
		glDepthFunc = gladLoadCoreFunction<PFNGLDEPTHFUNCPROC>("glDepthFunc", "opengl32.dll");
		glPixelStoref = gladLoadCoreFunction<PFNGLPIXELSTOREFPROC>("glPixelStoref", "opengl32.dll");
		glPixelStorei = gladLoadCoreFunction<PFNGLPIXELSTOREIPROC>("glPixelStorei", "opengl32.dll");
		glReadBuffer = gladLoadCoreFunction<PFNGLREADBUFFERPROC>("glReadBuffer", "opengl32.dll");
		glReadPixels = gladLoadCoreFunction<PFNGLREADPIXELSPROC>("glReadPixels", "opengl32.dll");
		glGetBooleanv = gladLoadCoreFunction<PFNGLGETBOOLEANVPROC>("glGetBooleanv", "opengl32.dll");
		glGetDoublev = gladLoadCoreFunction<PFNGLGETDOUBLEVPROC>("glGetDoublev", "opengl32.dll");
		glGetError = gladLoadCoreFunction<PFNGLGETERRORPROC>("glGetError", "opengl32.dll");
		glGetFloatv = gladLoadCoreFunction<PFNGLGETFLOATVPROC>("glGetFloatv", "opengl32.dll");
		glGetIntegerv = gladLoadCoreFunction<PFNGLGETINTEGERVPROC>("glGetIntegerv", "opengl32.dll");
		glGetString = gladLoadCoreFunction<PFNGLGETSTRINGPROC>("glGetString", "opengl32.dll");
		glGetTexImage = gladLoadCoreFunction<PFNGLGETTEXIMAGEPROC>("glGetTexImage", "opengl32.dll");
		glGetTexParameterfv = gladLoadCoreFunction<PFNGLGETTEXPARAMETERFVPROC>("glGetTexParameterfv", "opengl32.dll");
		glGetTexParameteriv = gladLoadCoreFunction<PFNGLGETTEXPARAMETERIVPROC>("glGetTexParameteriv", "opengl32.dll");
		glGetTexLevelParameterfv = gladLoadCoreFunction<PFNGLGETTEXLEVELPARAMETERFVPROC>("glGetTexLevelParameterfv", "opengl32.dll");
		glGetTexLevelParameteriv = gladLoadCoreFunction<PFNGLGETTEXLEVELPARAMETERIVPROC>("glGetTexLevelParameteriv", "opengl32.dll");
		glIsEnabled = gladLoadCoreFunction<PFNGLISENABLEDPROC>("glIsEnabled", "opengl32.dll");
		glDepthRange = gladLoadCoreFunction<PFNGLDEPTHRANGEPROC>("glDepthRange", "opengl32.dll");
		glViewport = gladLoadCoreFunction<PFNGLVIEWPORTPROC>("glViewport", "opengl32.dll");
	}
}