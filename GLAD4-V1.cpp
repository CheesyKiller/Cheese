import GLADBase;
import GLAD4;

namespace GLAD::V4_1 {
	void load_GL_RECURSIVE(GLADloadproc load) {
		glReleaseShaderCompiler = GLAD::gladLoadFunction<PFNGLRELEASESHADERCOMPILERPROC>("glReleaseShaderCompiler", load);
		glShaderBinary = GLAD::gladLoadFunction<PFNGLSHADERBINARYPROC>("glShaderBinary", load);
		glGetShaderPrecisionFormat = GLAD::gladLoadFunction<PFNGLGETSHADERPRECISIONFORMATPROC>("glGetShaderPrecisionFormat", load);
		glDepthRangef = GLAD::gladLoadFunction<PFNGLDEPTHRANGEFPROC>("glDepthRangef", load);
		glClearDepthf = GLAD::gladLoadFunction<PFNGLCLEARDEPTHFPROC>("glClearDepthf", load);
		glGetProgramBinary = GLAD::gladLoadFunction<PFNGLGETPROGRAMBINARYPROC>("glGetProgramBinary", load);
		glProgramBinary = GLAD::gladLoadFunction<PFNGLPROGRAMBINARYPROC>("glProgramBinary", load);
		glProgramParameteri = GLAD::gladLoadFunction<PFNGLPROGRAMPARAMETERIPROC>("glProgramParameteri", load);
		glUseProgramStages = GLAD::gladLoadFunction<PFNGLUSEPROGRAMSTAGESPROC>("glUseProgramStages", load);
		glActiveShaderProgram = GLAD::gladLoadFunction<PFNGLACTIVESHADERPROGRAMPROC>("glActiveShaderProgram", load);
		glCreateShaderProgramv = GLAD::gladLoadFunction<PFNGLCREATESHADERPROGRAMVPROC>("glCreateShaderProgramv", load);
		glBindProgramPipeline = GLAD::gladLoadFunction<PFNGLBINDPROGRAMPIPELINEPROC>("glBindProgramPipeline", load);
		glDeleteProgramPipelines = GLAD::gladLoadFunction<PFNGLDELETEPROGRAMPIPELINESPROC>("glDeleteProgramPipelines", load);
		glGenProgramPipelines = GLAD::gladLoadFunction<PFNGLGENPROGRAMPIPELINESPROC>("glGenProgramPipelines", load);
		glIsProgramPipeline = GLAD::gladLoadFunction<PFNGLISPROGRAMPIPELINEPROC>("glIsProgramPipeline", load);
		glGetProgramPipelineiv = GLAD::gladLoadFunction<PFNGLGETPROGRAMPIPELINEIVPROC>("glGetProgramPipelineiv", load);
		glProgramParameteri = GLAD::gladLoadFunction<PFNGLPROGRAMPARAMETERIPROC>("glProgramParameteri", load);
		glProgramUniform1i = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM1IPROC>("glProgramUniform1i", load);
		glProgramUniform1iv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM1IVPROC>("glProgramUniform1iv", load);
		glProgramUniform1f = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM1FPROC>("glProgramUniform1f", load);
		glProgramUniform1fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM1FVPROC>("glProgramUniform1fv", load);
		glProgramUniform1d = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM1DPROC>("glProgramUniform1d", load);
		glProgramUniform1dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM1DVPROC>("glProgramUniform1dv", load);
		glProgramUniform1ui = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM1UIPROC>("glProgramUniform1ui", load);
		glProgramUniform1uiv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM1UIVPROC>("glProgramUniform1uiv", load);
		glProgramUniform2i = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM2IPROC>("glProgramUniform2i", load);
		glProgramUniform2iv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM2IVPROC>("glProgramUniform2iv", load);
		glProgramUniform2f = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM2FPROC>("glProgramUniform2f", load);
		glProgramUniform2fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM2FVPROC>("glProgramUniform2fv", load);
		glProgramUniform2d = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM2DPROC>("glProgramUniform2d", load);
		glProgramUniform2dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM2DVPROC>("glProgramUniform2dv", load);
		glProgramUniform2ui = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM2UIPROC>("glProgramUniform2ui", load);
		glProgramUniform2uiv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM2UIVPROC>("glProgramUniform2uiv", load);
		glProgramUniform3i = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM3IPROC>("glProgramUniform3i", load);
		glProgramUniform3iv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM3IVPROC>("glProgramUniform3iv", load);
		glProgramUniform3f = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM3FPROC>("glProgramUniform3f", load);
		glProgramUniform3fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM3FVPROC>("glProgramUniform3fv", load);
		glProgramUniform3d = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM3DPROC>("glProgramUniform3d", load);
		glProgramUniform3dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM3DVPROC>("glProgramUniform3dv", load);
		glProgramUniform3ui = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM3UIPROC>("glProgramUniform3ui", load);
		glProgramUniform3uiv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM3UIVPROC>("glProgramUniform3uiv", load);
		glProgramUniform4i = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM4IPROC>("glProgramUniform4i", load);
		glProgramUniform4iv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM4IVPROC>("glProgramUniform4iv", load);
		glProgramUniform4f = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM4FPROC>("glProgramUniform4f", load);
		glProgramUniform4fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM4FVPROC>("glProgramUniform4fv", load);
		glProgramUniform4d = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM4DPROC>("glProgramUniform4d", load);
		glProgramUniform4dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM4DVPROC>("glProgramUniform4dv", load);
		glProgramUniform4ui = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM4UIPROC>("glProgramUniform4ui", load);
		glProgramUniform4uiv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORM4UIVPROC>("glProgramUniform4uiv", load);
		glProgramUniformMatrix2fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX2FVPROC>("glProgramUniformMatrix2fv", load);
		glProgramUniformMatrix3fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX3FVPROC>("glProgramUniformMatrix3fv", load);
		glProgramUniformMatrix4fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX4FVPROC>("glProgramUniformMatrix4fv", load);
		glProgramUniformMatrix2dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX2DVPROC>("glProgramUniformMatrix2dv", load);
		glProgramUniformMatrix3dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX3DVPROC>("glProgramUniformMatrix3dv", load);
		glProgramUniformMatrix4dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX4DVPROC>("glProgramUniformMatrix4dv", load);
		glProgramUniformMatrix2x3fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC>("glProgramUniformMatrix2x3fv", load);
		glProgramUniformMatrix3x2fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC>("glProgramUniformMatrix3x2fv", load);
		glProgramUniformMatrix2x4fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC>("glProgramUniformMatrix2x4fv", load);
		glProgramUniformMatrix4x2fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC>("glProgramUniformMatrix4x2fv", load);
		glProgramUniformMatrix3x4fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC>("glProgramUniformMatrix3x4fv", load);
		glProgramUniformMatrix4x3fv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC>("glProgramUniformMatrix4x3fv", load);
		glProgramUniformMatrix2x3dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC>("glProgramUniformMatrix2x3dv", load);
		glProgramUniformMatrix3x2dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC>("glProgramUniformMatrix3x2dv", load);
		glProgramUniformMatrix2x4dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC>("glProgramUniformMatrix2x4dv", load);
		glProgramUniformMatrix4x2dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC>("glProgramUniformMatrix4x2dv", load);
		glProgramUniformMatrix3x4dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC>("glProgramUniformMatrix3x4dv", load);
		glProgramUniformMatrix4x3dv = GLAD::gladLoadFunction<PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC>("glProgramUniformMatrix4x3dv", load);
		glValidateProgramPipeline = GLAD::gladLoadFunction<PFNGLVALIDATEPROGRAMPIPELINEPROC>("glValidateProgramPipeline", load);
		glGetProgramPipelineInfoLog = GLAD::gladLoadFunction<PFNGLGETPROGRAMPIPELINEINFOLOGPROC>("glGetProgramPipelineInfoLog", load);
		glVertexAttribL1d = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBL1DPROC>("glVertexAttribL1d", load);
		glVertexAttribL2d = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBL2DPROC>("glVertexAttribL2d", load);
		glVertexAttribL3d = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBL3DPROC>("glVertexAttribL3d", load);
		glVertexAttribL4d = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBL4DPROC>("glVertexAttribL4d", load);
		glVertexAttribL1dv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBL1DVPROC>("glVertexAttribL1dv", load);
		glVertexAttribL2dv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBL2DVPROC>("glVertexAttribL2dv", load);
		glVertexAttribL3dv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBL3DVPROC>("glVertexAttribL3dv", load);
		glVertexAttribL4dv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBL4DVPROC>("glVertexAttribL4dv", load);
		glVertexAttribLPointer = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBLPOINTERPROC>("glVertexAttribLPointer", load);
		glGetVertexAttribLdv = GLAD::gladLoadFunction<PFNGLGETVERTEXATTRIBLDVPROC>("glGetVertexAttribLdv", load);
		glViewportArrayv = GLAD::gladLoadFunction<PFNGLVIEWPORTARRAYVPROC>("glViewportArrayv", load);
		glViewportIndexedf = GLAD::gladLoadFunction<PFNGLVIEWPORTINDEXEDFPROC>("glViewportIndexedf", load);
		glViewportIndexedfv = GLAD::gladLoadFunction<PFNGLVIEWPORTINDEXEDFVPROC>("glViewportIndexedfv", load);
		glScissorArrayv = GLAD::gladLoadFunction<PFNGLSCISSORARRAYVPROC>("glScissorArrayv", load);
		glScissorIndexed = GLAD::gladLoadFunction<PFNGLSCISSORINDEXEDPROC>("glScissorIndexed", load);
		glScissorIndexedv = GLAD::gladLoadFunction<PFNGLSCISSORINDEXEDVPROC>("glScissorIndexedv", load);
		glDepthRangeArrayv = GLAD::gladLoadFunction<PFNGLDEPTHRANGEARRAYVPROC>("glDepthRangeArrayv", load);
		glDepthRangeIndexed = GLAD::gladLoadFunction<PFNGLDEPTHRANGEINDEXEDPROC>("glDepthRangeIndexed", load);
		glGetFloati_v = GLAD::gladLoadFunction<PFNGLGETFLOATI_VPROC>("glGetFloati_v", load);
		glGetDoublei_v = GLAD::gladLoadFunction<PFNGLGETDOUBLEI_VPROC>("glGetDoublei_v", load);

		GLAD::V4_0::load_GL_RECURSIVE(load);
	}
}