import GLADBase;
import GLAD2;
import GLAD3;

namespace GLAD::V3_0 {
	void load_GL_RECURSIVE(GLADloadproc load) {
		glColorMaski = GLAD::gladLoadFunction<PFNGLCOLORMASKIPROC>("glColorMaski", load);
		glGetBooleani_v = GLAD::gladLoadFunction<PFNGLGETBOOLEANI_VPROC>("glGetBooleani_v", load);
		glGetIntegeri_v = GLAD::gladLoadFunction<PFNGLGETINTEGERI_VPROC>("glGetIntegeri_v", load);
		glEnablei = GLAD::gladLoadFunction<PFNGLENABLEIPROC>("glEnablei", load);
		glDisablei = GLAD::gladLoadFunction<PFNGLDISABLEIPROC>("glDisablei", load);
		glIsEnabledi = GLAD::gladLoadFunction<PFNGLISENABLEDIPROC>("glIsEnabledi", load);
		glBeginTransformFeedback = GLAD::gladLoadFunction<PFNGLBEGINTRANSFORMFEEDBACKPROC>("glBeginTransformFeedback", load);
		glEndTransformFeedback = GLAD::gladLoadFunction<PFNGLENDTRANSFORMFEEDBACKPROC>("glEndTransformFeedback", load);
		glBindBufferRange = GLAD::gladLoadFunction<PFNGLBINDBUFFERRANGEPROC>("glBindBufferRange", load);
		glBindBufferBase = GLAD::gladLoadFunction<PFNGLBINDBUFFERBASEPROC>("glBindBufferBase", load);
		glTransformFeedbackVaryings = GLAD::gladLoadFunction<PFNGLTRANSFORMFEEDBACKVARYINGSPROC>("glTransformFeedbackVaryings", load);
		glGetTransformFeedbackVarying = GLAD::gladLoadFunction<PFNGLGETTRANSFORMFEEDBACKVARYINGPROC>("glGetTransformFeedbackVarying", load);
		glClampColor = GLAD::gladLoadFunction<PFNGLCLAMPCOLORPROC>("glClampColor", load);
		glBeginConditionalRender = GLAD::gladLoadFunction<PFNGLBEGINCONDITIONALRENDERPROC>("glBeginConditionalRender", load);
		glEndConditionalRender = GLAD::gladLoadFunction<PFNGLENDCONDITIONALRENDERPROC>("glEndConditionalRender", load);
		glVertexAttribIPointer = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBIPOINTERPROC>("glVertexAttribIPointer", load);
		glGetVertexAttribIiv = GLAD::gladLoadFunction<PFNGLGETVERTEXATTRIBIIVPROC>("glGetVertexAttribIiv", load);
		glGetVertexAttribIuiv = GLAD::gladLoadFunction<PFNGLGETVERTEXATTRIBIUIVPROC>("glGetVertexAttribIuiv", load);
		glVertexAttribI1i = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI1IPROC>("glVertexAttribI1i", load);
		glVertexAttribI2i = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI2IPROC>("glVertexAttribI2i", load);
		glVertexAttribI3i = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI3IPROC>("glVertexAttribI3i", load);
		glVertexAttribI4i = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI4IPROC>("glVertexAttribI4i", load);
		glVertexAttribI1ui = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI1UIPROC>("glVertexAttribI1ui", load);
		glVertexAttribI2ui = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI2UIPROC>("glVertexAttribI2ui", load);
		glVertexAttribI3ui = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI3UIPROC>("glVertexAttribI3ui", load);
		glVertexAttribI4ui = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI4UIPROC>("glVertexAttribI4ui", load);
		glVertexAttribI1iv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI1IVPROC>("glVertexAttribI1iv", load);
		glVertexAttribI2iv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI2IVPROC>("glVertexAttribI2iv", load);
		glVertexAttribI3iv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI3IVPROC>("glVertexAttribI3iv", load);
		glVertexAttribI4iv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI4IVPROC>("glVertexAttribI4iv", load);
		glVertexAttribI1uiv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI1UIVPROC>("glVertexAttribI1uiv", load);
		glVertexAttribI2uiv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI2UIVPROC>("glVertexAttribI2uiv", load);
		glVertexAttribI3uiv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI3UIVPROC>("glVertexAttribI3uiv", load);
		glVertexAttribI4uiv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI4UIVPROC>("glVertexAttribI4uiv", load);
		glVertexAttribI4bv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI4BVPROC>("glVertexAttribI4bv", load);
		glVertexAttribI4sv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI4SVPROC>("glVertexAttribI4sv", load);
		glVertexAttribI4ubv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI4UBVPROC>("glVertexAttribI4ubv", load);
		glVertexAttribI4usv = GLAD::gladLoadFunction<PFNGLVERTEXATTRIBI4USVPROC>("glVertexAttribI4usv", load);
		glGetUniformuiv = GLAD::gladLoadFunction<PFNGLGETUNIFORMUIVPROC>("glGetUniformuiv", load);
		glBindFragDataLocation = GLAD::gladLoadFunction<PFNGLBINDFRAGDATALOCATIONPROC>("glBindFragDataLocation", load);
		glGetFragDataLocation = GLAD::gladLoadFunction<PFNGLGETFRAGDATALOCATIONPROC>("glGetFragDataLocation", load);
		glUniform1ui = GLAD::gladLoadFunction<PFNGLUNIFORM1UIPROC>("glUniform1ui", load);
		glUniform2ui = GLAD::gladLoadFunction<PFNGLUNIFORM2UIPROC>("glUniform2ui", load);
		glUniform3ui = GLAD::gladLoadFunction<PFNGLUNIFORM3UIPROC>("glUniform3ui", load);
		glUniform4ui = GLAD::gladLoadFunction<PFNGLUNIFORM4UIPROC>("glUniform4ui", load);
		glUniform1uiv = GLAD::gladLoadFunction<PFNGLUNIFORM1UIVPROC>("glUniform1uiv", load);
		glUniform2uiv = GLAD::gladLoadFunction<PFNGLUNIFORM2UIVPROC>("glUniform2uiv", load);
		glUniform3uiv = GLAD::gladLoadFunction<PFNGLUNIFORM3UIVPROC>("glUniform3uiv", load);
		glUniform4uiv = GLAD::gladLoadFunction<PFNGLUNIFORM4UIVPROC>("glUniform4uiv", load);
		glTexParameterIiv = GLAD::gladLoadFunction<PFNGLTEXPARAMETERIIVPROC>("glTexParameterIiv", load);
		glTexParameterIuiv = GLAD::gladLoadFunction<PFNGLTEXPARAMETERIUIVPROC>("glTexParameterIuiv", load);
		glGetTexParameterIiv = GLAD::gladLoadFunction<PFNGLGETTEXPARAMETERIIVPROC>("glGetTexParameterIiv", load);
		glGetTexParameterIuiv = GLAD::gladLoadFunction<PFNGLGETTEXPARAMETERIUIVPROC>("glGetTexParameterIuiv", load);
		glClearBufferiv = GLAD::gladLoadFunction<PFNGLCLEARBUFFERIVPROC>("glClearBufferiv", load);
		glClearBufferuiv = GLAD::gladLoadFunction<PFNGLCLEARBUFFERUIVPROC>("glClearBufferuiv", load);
		glClearBufferfv = GLAD::gladLoadFunction<PFNGLCLEARBUFFERFVPROC>("glClearBufferfv", load);
		glClearBufferfi = GLAD::gladLoadFunction<PFNGLCLEARBUFFERFIPROC>("glClearBufferfi", load);
		glGetStringi = GLAD::gladLoadFunction<PFNGLGETSTRINGIPROC>("glGetStringi", load);
		glIsRenderbuffer = GLAD::gladLoadFunction<PFNGLISRENDERBUFFERPROC>("glIsRenderbuffer", load);
		glBindRenderbuffer = GLAD::gladLoadFunction<PFNGLBINDRENDERBUFFERPROC>("glBindRenderbuffer", load);
		glDeleteRenderbuffers = GLAD::gladLoadFunction<PFNGLDELETERENDERBUFFERSPROC>("glDeleteRenderbuffers", load);
		glGenRenderbuffers = GLAD::gladLoadFunction<PFNGLGENRENDERBUFFERSPROC>("glGenRenderbuffers", load);
		glRenderbufferStorage = GLAD::gladLoadFunction<PFNGLRENDERBUFFERSTORAGEPROC>("glRenderbufferStorage", load);
		glGetRenderbufferParameteriv = GLAD::gladLoadFunction<PFNGLGETRENDERBUFFERPARAMETERIVPROC>("glGetRenderbufferParameteriv", load);
		glIsFramebuffer = GLAD::gladLoadFunction<PFNGLISFRAMEBUFFERPROC>("glIsFramebuffer", load);
		glBindFramebuffer = GLAD::gladLoadFunction<PFNGLBINDFRAMEBUFFERPROC>("glBindFramebuffer", load);
		glDeleteFramebuffers = GLAD::gladLoadFunction<PFNGLDELETEFRAMEBUFFERSPROC>("glDeleteFramebuffers", load);
		glGenFramebuffers = GLAD::gladLoadFunction<PFNGLGENFRAMEBUFFERSPROC>("glGenFramebuffers", load);
		glCheckFramebufferStatus = GLAD::gladLoadFunction<PFNGLCHECKFRAMEBUFFERSTATUSPROC>("glCheckFramebufferStatus", load);
		glFramebufferTexture1D = GLAD::gladLoadFunction<PFNGLFRAMEBUFFERTEXTURE1DPROC>("glFramebufferTexture1D", load);
		glFramebufferTexture2D = GLAD::gladLoadFunction<PFNGLFRAMEBUFFERTEXTURE2DPROC>("glFramebufferTexture2D", load);
		glFramebufferTexture3D = GLAD::gladLoadFunction<PFNGLFRAMEBUFFERTEXTURE3DPROC>("glFramebufferTexture3D", load);
		glFramebufferRenderbuffer = GLAD::gladLoadFunction<PFNGLFRAMEBUFFERRENDERBUFFERPROC>("glFramebufferRenderbuffer", load);
		glGetFramebufferAttachmentParameteriv = GLAD::gladLoadFunction<PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC>("glGetFramebufferAttachmentParameteriv", load);
		glGenerateMipmap = GLAD::gladLoadFunction<PFNGLGENERATEMIPMAPPROC>("glGenerateMipmap", load);
		glBlitFramebuffer = GLAD::gladLoadFunction<PFNGLBLITFRAMEBUFFERPROC>("glBlitFramebuffer", load);
		glRenderbufferStorageMultisample = GLAD::gladLoadFunction<PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC>("glRenderbufferStorageMultisample", load);
		glFramebufferTextureLayer = GLAD::gladLoadFunction<PFNGLFRAMEBUFFERTEXTURELAYERPROC>("glFramebufferTextureLayer", load);
		glMapBufferRange = GLAD::gladLoadFunction<PFNGLMAPBUFFERRANGEPROC>("glMapBufferRange", load);
		glFlushMappedBufferRange = GLAD::gladLoadFunction<PFNGLFLUSHMAPPEDBUFFERRANGEPROC>("glFlushMappedBufferRange", load);
		glBindVertexArray = GLAD::gladLoadFunction<PFNGLBINDVERTEXARRAYPROC>("glBindVertexArray", load);
		glDeleteVertexArrays = GLAD::gladLoadFunction<PFNGLDELETEVERTEXARRAYSPROC>("glDeleteVertexArrays", load);
		glGenVertexArrays = GLAD::gladLoadFunction<PFNGLGENVERTEXARRAYSPROC>("glGenVertexArrays", load);
		glIsVertexArray = GLAD::gladLoadFunction<PFNGLISVERTEXARRAYPROC>("glIsVertexArray", load);

		GLAD::V2_1::load_GL_RECURSIVE(load);
	}
}