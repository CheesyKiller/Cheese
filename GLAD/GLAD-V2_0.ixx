export module GLAD:V2_0;

export import :V1_5;

// Alias for function pointer types
export using PFNGLBLENDEQUATIONSEPARATEPROC = void(*)(GLenum modeRGB, GLenum modeAlpha);
export using PFNGLDRAWBUFFERSPROC = void(*)(GLsizei n, const GLenum* bufs);
export using PFNGLSTENCILOPSEPARATEPROC = void(*)(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass);
export using PFNGLSTENCILFUNCSEPARATEPROC = void(*)(GLenum face, GLenum func, GLint ref, GLuint mask);
export using PFNGLSTENCILMASKSEPARATEPROC = void(*)(GLenum face, GLuint mask);
export using PFNGLATTACHSHADERPROC = void(*)(GLuint program, GLuint shader);
export using PFNGLBINDATTRIBLOCATIONPROC = void(*)(GLuint program, GLuint index, const GLchar* name);
export using PFNGLCOMPILESHADERPROC = void(*)(GLuint shader);
export using PFNGLCREATEPROGRAMPROC = GLuint(*)(void);
export using PFNGLCREATESHADERPROC = GLuint(*)(GLenum type);
export using PFNGLDELETEPROGRAMPROC = void(*)(GLuint program);
export using PFNGLDELETESHADERPROC = void(*)(GLuint shader);
export using PFNGLDETACHSHADERPROC = void(*)(GLuint program, GLuint shader);
export using PFNGLDISABLEVERTEXATTRIBARRAYPROC = void(*)(GLuint index);
export using PFNGLENABLEVERTEXATTRIBARRAYPROC = void(*)(GLuint index);
export using PFNGLGETACTIVEATTRIBPROC = void(*)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
export using PFNGLGETACTIVEUNIFORMPROC = void(*)(GLuint program, GLuint index, GLsizei bufSize, GLsizei* length, GLint* size, GLenum* type, GLchar* name);
export using PFNGLGETATTACHEDSHADERSPROC = void(*)(GLuint program, GLsizei maxCount, GLsizei* count, GLuint* shaders);
export using PFNGLGETATTRIBLOCATIONPROC = GLint(*)(GLuint program, const GLchar* name);
export using PFNGLGETPROGRAMIVPROC = void(*)(GLuint program, GLenum pname, GLint* params);
export using PFNGLGETPROGRAMINFOLOGPROC = void(*)(GLuint program, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
export using PFNGLGETSHADERIVPROC = void(*)(GLuint shader, GLenum pname, GLint* params);
export using PFNGLGETSHADERINFOLOGPROC = void(*)(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* infoLog);
export using PFNGLGETSHADERSOURCEPROC = void(*)(GLuint shader, GLsizei bufSize, GLsizei* length, GLchar* source);
export using PFNGLGETUNIFORMLOCATIONPROC = GLint(*)(GLuint program, const GLchar* name);
export using PFNGLGETUNIFORMFVPROC = void(*)(GLuint program, GLint location, GLfloat* params);
export using PFNGLGETUNIFORMIVPROC = void(*)(GLuint program, GLint location, GLint* params);
export using PFNGLGETVERTEXATTRIBDVPROC = void(*)(GLuint index, GLenum pname, GLdouble* params);
export using PFNGLGETVERTEXATTRIBFVPROC = void(*)(GLuint index, GLenum pname, GLfloat* params);
export using PFNGLGETVERTEXATTRIBIVPROC = void(*)(GLuint index, GLenum pname, GLint* params);
export using PFNGLGETVERTEXATTRIBPOINTERVPROC = void(*)(GLuint index, GLenum pname, void** pointer);
export using PFNGLISPROGRAMPROC = GLboolean(*)(GLuint program);
export using PFNGLISSHADERPROC = GLboolean(*)(GLuint shader);
export using PFNGLLINKPROGRAMPROC = void(*)(GLuint program);
export using PFNGLSHADERSOURCEPROC = void(*)(GLuint shader, GLsizei count, const GLchar* const* string, const GLint* length);
export using PFNGLUSEPROGRAMPROC = void(*)(GLuint program);
export using PFNGLUNIFORM1FPROC = void(*)(GLint location, GLfloat v0);
export using PFNGLUNIFORM2FPROC = void(*)(GLint location, GLfloat v0, GLfloat v1);
export using PFNGLUNIFORM3FPROC = void(*)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2);
export using PFNGLUNIFORM4FPROC = void(*)(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3);
export using PFNGLUNIFORM1IPROC = void(*)(GLint location, GLint v0);
export using PFNGLUNIFORM2IPROC = void(*)(GLint location, GLint v0, GLint v1);
export using PFNGLUNIFORM3IPROC = void(*)(GLint location, GLint v0, GLint v1, GLint v2);
export using PFNGLUNIFORM4IPROC = void(*)(GLint location, GLint v0, GLint v1, GLint v2, GLint v3);
export using PFNGLUNIFORM1FVPROC = void(*)(GLint location, GLsizei count, const GLfloat* value);
export using PFNGLUNIFORM2FVPROC = void(*)(GLint location, GLsizei count, const GLfloat* value);
export using PFNGLUNIFORM3FVPROC = void(*)(GLint location, GLsizei count, const GLfloat* value);
export using PFNGLUNIFORM4FVPROC = void(*)(GLint location, GLsizei count, const GLfloat* value);
export using PFNGLUNIFORM1IVPROC = void(*)(GLint location, GLsizei count, const GLint* value);
export using PFNGLUNIFORM2IVPROC = void(*)(GLint location, GLsizei count, const GLint* value);
export using PFNGLUNIFORM3IVPROC = void(*)(GLint location, GLsizei count, const GLint* value);
export using PFNGLUNIFORM4IVPROC = void(*)(GLint location, GLsizei count, const GLint* value);
export using PFNGLUNIFORMMATRIX2FVPROC = void(*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
export using PFNGLUNIFORMMATRIX3FVPROC = void(*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
export using PFNGLUNIFORMMATRIX4FVPROC = void(*)(GLint location, GLsizei count, GLboolean transpose, const GLfloat* value);
export using PFNGLVALIDATEPROGRAMPROC = void(*)(GLuint program);
export using PFNGLVERTEXATTRIB1DPROC = void(*)(GLuint index, GLdouble x);
export using PFNGLVERTEXATTRIB1DVPROC = void(*)(GLuint index, const GLdouble* v);
export using PFNGLVERTEXATTRIB1FPROC = void(*)(GLuint index, GLfloat x);
export using PFNGLVERTEXATTRIB1FVPROC = void(*)(GLuint index, const GLfloat* v);
export using PFNGLVERTEXATTRIB1SPROC = void(*)(GLuint index, GLshort x);
export using PFNGLVERTEXATTRIB1SVPROC = void(*)(GLuint index, const GLshort* v);
export using PFNGLVERTEXATTRIB2DPROC = void(*)(GLuint index, GLdouble x, GLdouble y);
export using PFNGLVERTEXATTRIB2DVPROC = void(*)(GLuint index, const GLdouble* v);
export using PFNGLVERTEXATTRIB2FPROC = void(*)(GLuint index, GLfloat x, GLfloat y);
export using PFNGLVERTEXATTRIB2FVPROC = void(*)(GLuint index, const GLfloat* v);
export using PFNGLVERTEXATTRIB2SPROC = void(*)(GLuint index, GLshort x, GLshort y);
export using PFNGLVERTEXATTRIB2SVPROC = void(*)(GLuint index, const GLshort* v);
export using PFNGLVERTEXATTRIB3DPROC = void(*)(GLuint index, GLdouble x, GLdouble y, GLdouble z);
export using PFNGLVERTEXATTRIB3DVPROC = void(*)(GLuint index, const GLdouble* v);
export using PFNGLVERTEXATTRIB3FPROC = void(*)(GLuint index, GLfloat x, GLfloat y, GLfloat z);
export using PFNGLVERTEXATTRIB3FVPROC = void(*)(GLuint index, const GLfloat* v);
export using PFNGLVERTEXATTRIB3SPROC = void(*)(GLuint index, GLshort x, GLshort y, GLshort z);
export using PFNGLVERTEXATTRIB3SVPROC = void(*)(GLuint index, const GLshort* v);
export using PFNGLVERTEXATTRIB4NBVPROC = void(*)(GLuint index, const GLbyte* v);
export using PFNGLVERTEXATTRIB4NIVPROC = void(*)(GLuint index, const GLint* v);
export using PFNGLVERTEXATTRIB4NSVPROC = void(*)(GLuint index, const GLshort* v);
export using PFNGLVERTEXATTRIB4NUBPROC = void(*)(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w);
export using PFNGLVERTEXATTRIB4NUBVPROC = void(*)(GLuint index, const GLubyte* v);
export using PFNGLVERTEXATTRIB4NUIVPROC = void(*)(GLuint index, const GLuint* v);
export using PFNGLVERTEXATTRIB4NUSVPROC = void(*)(GLuint index, const GLushort* v);
export using PFNGLVERTEXATTRIB4BVPROC = void(*)(GLuint index, const GLbyte* v);
export using PFNGLVERTEXATTRIB4DPROC = void(*)(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w);
export using PFNGLVERTEXATTRIB4DVPROC = void(*)(GLuint index, const GLdouble* v);
export using PFNGLVERTEXATTRIB4FPROC = void(*)(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w);
export using PFNGLVERTEXATTRIB4FVPROC = void(*)(GLuint index, const GLfloat* v);
export using PFNGLVERTEXATTRIB4IVPROC = void(*)(GLuint index, const GLint* v);
export using PFNGLVERTEXATTRIB4SPROC = void(*)(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w);
export using PFNGLVERTEXATTRIB4SVPROC = void(*)(GLuint index, const GLshort* v);
export using PFNGLVERTEXATTRIB4UBVPROC = void(*)(GLuint index, const GLubyte* v);
export using PFNGLVERTEXATTRIB4UIVPROC = void(*)(GLuint index, const GLuint* v);
export using PFNGLVERTEXATTRIB4USVPROC = void(*)(GLuint index, const GLushort* v);
export using PFNGLVERTEXATTRIBPOINTERPROC = void(*)(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const void* pointer);

// Declare function pointers as variables
export PFNGLBLENDEQUATIONSEPARATEPROC glBlendEquationSeparate = nullptr;
export PFNGLDRAWBUFFERSPROC glDrawBuffers = nullptr;
export PFNGLSTENCILOPSEPARATEPROC glStencilOpSeparate = nullptr;
export PFNGLSTENCILFUNCSEPARATEPROC glStencilFuncSeparate = nullptr;
export PFNGLSTENCILMASKSEPARATEPROC glStencilMaskSeparate = nullptr;
export PFNGLATTACHSHADERPROC glAttachShader = nullptr;
export PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation = nullptr;
export PFNGLCOMPILESHADERPROC glCompileShader = nullptr;
export PFNGLCREATEPROGRAMPROC glCreateProgram = nullptr;
export PFNGLCREATESHADERPROC glCreateShader = nullptr;
export PFNGLDELETEPROGRAMPROC glDeleteProgram = nullptr;
export PFNGLDELETESHADERPROC glDeleteShader = nullptr;
export PFNGLDETACHSHADERPROC glDetachShader = nullptr;
export PFNGLDISABLEVERTEXATTRIBARRAYPROC glDisableVertexAttribArray = nullptr;
export PFNGLENABLEVERTEXATTRIBARRAYPROC glEnableVertexAttribArray = nullptr;
export PFNGLGETACTIVEATTRIBPROC glGetActiveAttrib = nullptr;
export PFNGLGETACTIVEUNIFORMPROC glGetActiveUniform = nullptr;
export PFNGLGETATTACHEDSHADERSPROC glGetAttachedShaders = nullptr;
export PFNGLGETATTRIBLOCATIONPROC glGetAttribLocation = nullptr;
export PFNGLGETPROGRAMIVPROC glGetProgramiv = nullptr;
export PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog = nullptr;
export PFNGLGETSHADERIVPROC glGetShaderiv = nullptr;
export PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog = nullptr;
export PFNGLGETSHADERSOURCEPROC glGetShaderSource = nullptr;
export PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation = nullptr;
export PFNGLGETUNIFORMFVPROC glGetUniformfv = nullptr;
export PFNGLGETUNIFORMIVPROC glGetUniformiv = nullptr;
export PFNGLGETVERTEXATTRIBDVPROC glGetVertexAttribdv = nullptr;
export PFNGLGETVERTEXATTRIBFVPROC glGetVertexAttribfv = nullptr;
export PFNGLGETVERTEXATTRIBIVPROC glGetVertexAttribiv = nullptr;
export PFNGLGETVERTEXATTRIBPOINTERVPROC glGetVertexAttribPointerv = nullptr;
export PFNGLISPROGRAMPROC glIsProgram = nullptr;
export PFNGLISSHADERPROC glIsShader = nullptr;
export PFNGLLINKPROGRAMPROC glLinkProgram = nullptr;
export PFNGLSHADERSOURCEPROC glShaderSource = nullptr;
export PFNGLUSEPROGRAMPROC glUseProgram = nullptr;
export PFNGLUNIFORM1FPROC glUniform1f = nullptr;
export PFNGLUNIFORM2FPROC glUniform2f = nullptr;
export PFNGLUNIFORM3FPROC glUniform3f = nullptr;
export PFNGLUNIFORM4FPROC glUniform4f = nullptr;
export PFNGLUNIFORM1IPROC glUniform1i = nullptr;
export PFNGLUNIFORM2IPROC glUniform2i = nullptr;
export PFNGLUNIFORM3IPROC glUniform3i = nullptr;
export PFNGLUNIFORM4IPROC glUniform4i = nullptr;
export PFNGLUNIFORM1FVPROC glUniform1fv = nullptr;
export PFNGLUNIFORM2FVPROC glUniform2fv = nullptr;
export PFNGLUNIFORM3FVPROC glUniform3fv = nullptr;
export PFNGLUNIFORM4FVPROC glUniform4fv = nullptr;
export PFNGLUNIFORM1IVPROC glUniform1iv = nullptr;
export PFNGLUNIFORM2IVPROC glUniform2iv = nullptr;
export PFNGLUNIFORM3IVPROC glUniform3iv = nullptr;
export PFNGLUNIFORM4IVPROC glUniform4iv = nullptr;
export PFNGLUNIFORMMATRIX2FVPROC glUniformMatrix2fv = nullptr;
export PFNGLUNIFORMMATRIX3FVPROC glUniformMatrix3fv = nullptr;
export PFNGLUNIFORMMATRIX4FVPROC glUniformMatrix4fv = nullptr;
export PFNGLVALIDATEPROGRAMPROC glValidateProgram = nullptr;
export PFNGLVERTEXATTRIB1DPROC glVertexAttrib1d = nullptr;
export PFNGLVERTEXATTRIB1DVPROC glVertexAttrib1dv = nullptr;
export PFNGLVERTEXATTRIB1FPROC glVertexAttrib1f = nullptr;
export PFNGLVERTEXATTRIB1FVPROC glVertexAttrib1fv = nullptr;
export PFNGLVERTEXATTRIB1SPROC glVertexAttrib1s = nullptr;
export PFNGLVERTEXATTRIB1SVPROC glVertexAttrib1sv = nullptr;
export PFNGLVERTEXATTRIB2DPROC glVertexAttrib2d = nullptr;
export PFNGLVERTEXATTRIB2DVPROC glVertexAttrib2dv = nullptr;
export PFNGLVERTEXATTRIB2FPROC glVertexAttrib2f = nullptr;
export PFNGLVERTEXATTRIB2FVPROC glVertexAttrib2fv = nullptr;
export PFNGLVERTEXATTRIB2SPROC glVertexAttrib2s = nullptr;
export PFNGLVERTEXATTRIB2SVPROC glVertexAttrib2sv = nullptr;
export PFNGLVERTEXATTRIB3DPROC glVertexAttrib3d = nullptr;
export PFNGLVERTEXATTRIB3DVPROC glVertexAttrib3dv = nullptr;
export PFNGLVERTEXATTRIB3FPROC glVertexAttrib3f = nullptr;
export PFNGLVERTEXATTRIB3FVPROC glVertexAttrib3fv = nullptr;
export PFNGLVERTEXATTRIB3SPROC glVertexAttrib3s = nullptr;
export PFNGLVERTEXATTRIB3SVPROC glVertexAttrib3sv = nullptr;
export PFNGLVERTEXATTRIB4NBVPROC glVertexAttrib4Nbv = nullptr;
export PFNGLVERTEXATTRIB4NIVPROC glVertexAttrib4Niv = nullptr;
export PFNGLVERTEXATTRIB4NSVPROC glVertexAttrib4Nsv = nullptr;
export PFNGLVERTEXATTRIB4NUBPROC glVertexAttrib4Nub = nullptr;
export PFNGLVERTEXATTRIB4NUBVPROC glVertexAttrib4Nubv = nullptr;
export PFNGLVERTEXATTRIB4NUIVPROC glVertexAttrib4Nuiv = nullptr;
export PFNGLVERTEXATTRIB4NUSVPROC glVertexAttrib4Nusv = nullptr;
export PFNGLVERTEXATTRIB4BVPROC glVertexAttrib4bv = nullptr;
export PFNGLVERTEXATTRIB4DPROC glVertexAttrib4d = nullptr;
export PFNGLVERTEXATTRIB4DVPROC glVertexAttrib4dv = nullptr;
export PFNGLVERTEXATTRIB4FPROC glVertexAttrib4f = nullptr;
export PFNGLVERTEXATTRIB4FVPROC glVertexAttrib4fv = nullptr;
export PFNGLVERTEXATTRIB4IVPROC glVertexAttrib4iv = nullptr;
export PFNGLVERTEXATTRIB4SPROC glVertexAttrib4s = nullptr;
export PFNGLVERTEXATTRIB4SVPROC glVertexAttrib4sv = nullptr;
export PFNGLVERTEXATTRIB4UBVPROC glVertexAttrib4ubv = nullptr;
export PFNGLVERTEXATTRIB4UIVPROC glVertexAttrib4uiv = nullptr;
export PFNGLVERTEXATTRIB4USVPROC glVertexAttrib4usv = nullptr;
export PFNGLVERTEXATTRIBPOINTERPROC glVertexAttribPointer = nullptr;

export namespace GLAD_2_0 {
	void load_GL_RECURSIVE(GLADloadproc load) {
		glBlendEquationSeparate = gladLoadFunction<PFNGLBLENDEQUATIONSEPARATEPROC>("glBlendEquationSeparate", load);
		glDrawBuffers = gladLoadFunction<PFNGLDRAWBUFFERSPROC>("glDrawBuffers", load);
		glStencilOpSeparate = gladLoadFunction<PFNGLSTENCILOPSEPARATEPROC>("glStencilOpSeparate", load);
		glStencilFuncSeparate = gladLoadFunction<PFNGLSTENCILFUNCSEPARATEPROC>("glStencilFuncSeparate", load);
		glStencilMaskSeparate = gladLoadFunction<PFNGLSTENCILMASKSEPARATEPROC>("glStencilMaskSeparate", load);
		glAttachShader = gladLoadFunction<PFNGLATTACHSHADERPROC>("glAttachShader", load);
		glBindAttribLocation = gladLoadFunction<PFNGLBINDATTRIBLOCATIONPROC>("glBindAttribLocation", load);
		glCompileShader = gladLoadFunction<PFNGLCOMPILESHADERPROC>("glCompileShader", load);
		glCreateProgram = gladLoadFunction<PFNGLCREATEPROGRAMPROC>("glCreateProgram", load);
		glCreateShader = gladLoadFunction<PFNGLCREATESHADERPROC>("glCreateShader", load);
		glDeleteProgram = gladLoadFunction<PFNGLDELETEPROGRAMPROC>("glDeleteProgram", load);
		glDeleteShader = gladLoadFunction<PFNGLDELETESHADERPROC>("glDeleteShader", load);
		glDetachShader = gladLoadFunction<PFNGLDETACHSHADERPROC>("glDetachShader", load);
		glDisableVertexAttribArray = gladLoadFunction<PFNGLDISABLEVERTEXATTRIBARRAYPROC>("glDisableVertexAttribArray", load);
		glEnableVertexAttribArray = gladLoadFunction<PFNGLENABLEVERTEXATTRIBARRAYPROC>("glEnableVertexAttribArray", load);
		glGetActiveAttrib = gladLoadFunction<PFNGLGETACTIVEATTRIBPROC>("glGetActiveAttrib", load);
		glGetActiveUniform = gladLoadFunction<PFNGLGETACTIVEUNIFORMPROC>("glGetActiveUniform", load);
		glGetAttachedShaders = gladLoadFunction<PFNGLGETATTACHEDSHADERSPROC>("glGetAttachedShaders", load);
		glGetAttribLocation = gladLoadFunction<PFNGLGETATTRIBLOCATIONPROC>("glGetAttribLocation", load);
		glGetProgramiv = gladLoadFunction<PFNGLGETPROGRAMIVPROC>("glGetProgramiv", load);
		glGetProgramInfoLog = gladLoadFunction<PFNGLGETPROGRAMINFOLOGPROC>("glGetProgramInfoLog", load);
		glGetShaderiv = gladLoadFunction<PFNGLGETSHADERIVPROC>("glGetShaderiv", load);
		glGetShaderInfoLog = gladLoadFunction<PFNGLGETSHADERINFOLOGPROC>("glGetShaderInfoLog", load);
		glGetShaderSource = gladLoadFunction<PFNGLGETSHADERSOURCEPROC>("glGetShaderSource", load);
		glGetUniformLocation = gladLoadFunction<PFNGLGETUNIFORMLOCATIONPROC>("glGetUniformLocation", load);
		glGetUniformfv = gladLoadFunction<PFNGLGETUNIFORMFVPROC>("glGetUniformfv", load);
		glGetUniformiv = gladLoadFunction<PFNGLGETUNIFORMIVPROC>("glGetUniformiv", load);
		glGetVertexAttribdv = gladLoadFunction<PFNGLGETVERTEXATTRIBDVPROC>("glGetVertexAttribdv", load);
		glGetVertexAttribfv = gladLoadFunction<PFNGLGETVERTEXATTRIBFVPROC>("glGetVertexAttribfv", load);
		glGetVertexAttribiv = gladLoadFunction<PFNGLGETVERTEXATTRIBIVPROC>("glGetVertexAttribiv", load);
		glGetVertexAttribPointerv = gladLoadFunction<PFNGLGETVERTEXATTRIBPOINTERVPROC>("glGetVertexAttribPointerv", load);
		glIsProgram = gladLoadFunction<PFNGLISPROGRAMPROC>("glIsProgram", load);
		glIsShader = gladLoadFunction<PFNGLISSHADERPROC>("glIsShader", load);
		glLinkProgram = gladLoadFunction<PFNGLLINKPROGRAMPROC>("glLinkProgram", load);
		glShaderSource = gladLoadFunction<PFNGLSHADERSOURCEPROC>("glShaderSource", load);
		glUseProgram = gladLoadFunction<PFNGLUSEPROGRAMPROC>("glUseProgram", load);
		glUniform1f = gladLoadFunction<PFNGLUNIFORM1FPROC>("glUniform1f", load);
		glUniform2f = gladLoadFunction<PFNGLUNIFORM2FPROC>("glUniform2f", load);
		glUniform3f = gladLoadFunction<PFNGLUNIFORM3FPROC>("glUniform3f", load);
		glUniform4f = gladLoadFunction<PFNGLUNIFORM4FPROC>("glUniform4f", load);
		glUniform1i = gladLoadFunction<PFNGLUNIFORM1IPROC>("glUniform1i", load);
		glUniform2i = gladLoadFunction<PFNGLUNIFORM2IPROC>("glUniform2i", load);
		glUniform3i = gladLoadFunction<PFNGLUNIFORM3IPROC>("glUniform3i", load);
		glUniform4i = gladLoadFunction<PFNGLUNIFORM4IPROC>("glUniform4i", load);
		glUniform1fv = gladLoadFunction<PFNGLUNIFORM1FVPROC>("glUniform1fv", load);
		glUniform2fv = gladLoadFunction<PFNGLUNIFORM2FVPROC>("glUniform2fv", load);
		glUniform3fv = gladLoadFunction<PFNGLUNIFORM3FVPROC>("glUniform3fv", load);
		glUniform4fv = gladLoadFunction<PFNGLUNIFORM4FVPROC>("glUniform4fv", load);
		glUniform1iv = gladLoadFunction<PFNGLUNIFORM1IVPROC>("glUniform1iv", load);
		glUniform2iv = gladLoadFunction<PFNGLUNIFORM2IVPROC>("glUniform2iv", load);
		glUniform3iv = gladLoadFunction<PFNGLUNIFORM3IVPROC>("glUniform3iv", load);
		glUniform4iv = gladLoadFunction<PFNGLUNIFORM4IVPROC>("glUniform4iv", load);
		glUniformMatrix2fv = gladLoadFunction<PFNGLUNIFORMMATRIX2FVPROC>("glUniformMatrix2fv", load);
		glUniformMatrix3fv = gladLoadFunction<PFNGLUNIFORMMATRIX3FVPROC>("glUniformMatrix3fv", load);
		glUniformMatrix4fv = gladLoadFunction<PFNGLUNIFORMMATRIX4FVPROC>("glUniformMatrix4fv", load);
		glValidateProgram = gladLoadFunction<PFNGLVALIDATEPROGRAMPROC>("glValidateProgram", load);
		glVertexAttrib1d = gladLoadFunction<PFNGLVERTEXATTRIB1DPROC>("glVertexAttrib1d", load);
		glVertexAttrib1dv = gladLoadFunction<PFNGLVERTEXATTRIB1DVPROC>("glVertexAttrib1dv", load);
		glVertexAttrib1f = gladLoadFunction<PFNGLVERTEXATTRIB1FPROC>("glVertexAttrib1f", load);
		glVertexAttrib1fv = gladLoadFunction<PFNGLVERTEXATTRIB1FVPROC>("glVertexAttrib1fv", load);
		glVertexAttrib1s = gladLoadFunction<PFNGLVERTEXATTRIB1SPROC>("glVertexAttrib1s", load);
		glVertexAttrib1sv = gladLoadFunction<PFNGLVERTEXATTRIB1SVPROC>("glVertexAttrib1sv", load);
		glVertexAttrib2d = gladLoadFunction<PFNGLVERTEXATTRIB2DPROC>("glVertexAttrib2d", load);
		glVertexAttrib2dv = gladLoadFunction<PFNGLVERTEXATTRIB2DVPROC>("glVertexAttrib2dv", load);
		glVertexAttrib2f = gladLoadFunction<PFNGLVERTEXATTRIB2FPROC>("glVertexAttrib2f", load);
		glVertexAttrib2fv = gladLoadFunction<PFNGLVERTEXATTRIB2FVPROC>("glVertexAttrib2fv", load);
		glVertexAttrib2s = gladLoadFunction<PFNGLVERTEXATTRIB2SPROC>("glVertexAttrib2s", load);
		glVertexAttrib2sv = gladLoadFunction<PFNGLVERTEXATTRIB2SVPROC>("glVertexAttrib2sv", load);
		glVertexAttrib3d = gladLoadFunction<PFNGLVERTEXATTRIB3DPROC>("glVertexAttrib3d", load);
		glVertexAttrib3dv = gladLoadFunction<PFNGLVERTEXATTRIB3DVPROC>("glVertexAttrib3dv", load);
		glVertexAttrib3f = gladLoadFunction<PFNGLVERTEXATTRIB3FPROC>("glVertexAttrib3f", load);
		glVertexAttrib3fv = gladLoadFunction<PFNGLVERTEXATTRIB3FVPROC>("glVertexAttrib3fv", load);
		glVertexAttrib3s = gladLoadFunction<PFNGLVERTEXATTRIB3SPROC>("glVertexAttrib3s", load);
		glVertexAttrib3sv = gladLoadFunction<PFNGLVERTEXATTRIB3SVPROC>("glVertexAttrib3sv", load);
		glVertexAttrib4Nbv = gladLoadFunction<PFNGLVERTEXATTRIB4NBVPROC>("glVertexAttrib4Nbv", load);
		glVertexAttrib4Niv = gladLoadFunction<PFNGLVERTEXATTRIB4NIVPROC>("glVertexAttrib4Niv", load);
		glVertexAttrib4Nsv = gladLoadFunction<PFNGLVERTEXATTRIB4NSVPROC>("glVertexAttrib4Nsv", load);
		glVertexAttrib4Nub = gladLoadFunction<PFNGLVERTEXATTRIB4NUBPROC>("glVertexAttrib4Nub", load);
		glVertexAttrib4Nubv = gladLoadFunction<PFNGLVERTEXATTRIB4NUBVPROC>("glVertexAttrib4Nubv", load);
		glVertexAttrib4Nuiv = gladLoadFunction<PFNGLVERTEXATTRIB4NUIVPROC>("glVertexAttrib4Nuiv", load);
		glVertexAttrib4Nusv = gladLoadFunction<PFNGLVERTEXATTRIB4NUSVPROC>("glVertexAttrib4Nusv", load);
		glVertexAttrib4bv = gladLoadFunction<PFNGLVERTEXATTRIB4BVPROC>("glVertexAttrib4bv", load);
		glVertexAttrib4d = gladLoadFunction<PFNGLVERTEXATTRIB4DPROC>("glVertexAttrib4d", load);
		glVertexAttrib4dv = gladLoadFunction<PFNGLVERTEXATTRIB4DVPROC>("glVertexAttrib4dv", load);
		glVertexAttrib4f = gladLoadFunction<PFNGLVERTEXATTRIB4FPROC>("glVertexAttrib4f", load);
		glVertexAttrib4fv = gladLoadFunction<PFNGLVERTEXATTRIB4FVPROC>("glVertexAttrib4fv", load);
		glVertexAttrib4iv = gladLoadFunction<PFNGLVERTEXATTRIB4IVPROC>("glVertexAttrib4iv", load);
		glVertexAttrib4s = gladLoadFunction<PFNGLVERTEXATTRIB4SPROC>("glVertexAttrib4s", load);
		glVertexAttrib4sv = gladLoadFunction<PFNGLVERTEXATTRIB4SVPROC>("glVertexAttrib4sv", load);
		glVertexAttrib4ubv = gladLoadFunction<PFNGLVERTEXATTRIB4UBVPROC>("glVertexAttrib4ubv", load);
		glVertexAttrib4uiv = gladLoadFunction<PFNGLVERTEXATTRIB4UIVPROC>("glVertexAttrib4uiv", load);
		glVertexAttrib4usv = gladLoadFunction<PFNGLVERTEXATTRIB4USVPROC>("glVertexAttrib4usv", load);
		glVertexAttribPointer = gladLoadFunction<PFNGLVERTEXATTRIBPOINTERPROC>("glVertexAttribPointer", load);

		GLAD_1_5::load_GL_RECURSIVE(load);
	}
}